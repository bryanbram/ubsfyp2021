[{"/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/index.js":"1","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/App.js":"2","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/store.js":"3","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/containers/Home.js":"4","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/containers/Activate.js":"5","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/containers/Signup.js":"6","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/containers/Login.js":"7","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/containers/ResetPassword.js":"8","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/containers/ResetPasswordConfirm.js":"9","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/hocs/Layout.js":"10","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/actions/authenticate.js":"11","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/components/Navbar.js":"12","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/reducers/index.js":"13","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/actions/types.js":"14","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/reducers/auth.js":"15"},{"size":197,"mtime":1611289864802,"results":"16","hashOfConfig":"17"},{"size":1225,"mtime":1611739929086,"results":"18","hashOfConfig":"17"},{"size":398,"mtime":1611289864805,"results":"19","hashOfConfig":"17"},{"size":475,"mtime":1611289864796,"results":"20","hashOfConfig":"17"},{"size":1477,"mtime":1611289864795,"results":"21","hashOfConfig":"17"},{"size":5783,"mtime":1611289864796,"results":"22","hashOfConfig":"17"},{"size":3518,"mtime":1611289864796,"results":"23","hashOfConfig":"17"},{"size":2342,"mtime":1611289864796,"results":"24","hashOfConfig":"17"},{"size":3383,"mtime":1611289864796,"results":"25","hashOfConfig":"17"},{"size":522,"mtime":1611289864802,"results":"26","hashOfConfig":"17"},{"size":4684,"mtime":1611289864795,"results":"27","hashOfConfig":"17"},{"size":2274,"mtime":1611740897461,"results":"28","hashOfConfig":"17"},{"size":115,"mtime":1611289864804,"results":"29","hashOfConfig":"17"},{"size":818,"mtime":1611289864795,"results":"30","hashOfConfig":"17"},{"size":3528,"mtime":1611475329920,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ntfylo",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},"/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/index.js",[],["70","71"],"/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/App.js",[],"/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/store.js",["72"],"import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/containers/Home.js",["73"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => (\n    <div className='container'>\n        <div class='jumbotron mt-5'>\n            <h1 class='display-4'>Welcome to !H05T4G3S!</h1>\n            <p class='lead'></p>\n            <hr class='my-4' />\n            {/* <p>Click the Log In button</p>\n            <Link class='btn btn-primary btn-lg' to='/login' role='button'>Login</Link> */}\n        </div>\n    </div>\n);\n\nexport default Home;\n","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/containers/Activate.js",[],"/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/containers/Signup.js",["74"],"import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signup } from '../actions/authenticate';\nimport registerLogo from './picture/microchip.jpg';\nimport axios from 'axios';\nimport './css/login.css'\n\nconst Signup = ({ signup, message,isAuthenticated }) => {\n    const [accountCreationError, setAccountCreationError] = useState(\"\");\n\n    const [registerFormData, setRegisterFormData] = useState({\n        token: '',\n        username: '',\n        email: '',\n        password: '',\n        re_password: ''\n    });\n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        }\n    };\n\n    const {token, username, email, password, re_password } = registerFormData;\n\n    // to check whether an email has been registered\n    async function has_email_registered(company_email) {\n     \n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/account/?email=${company_email}`,config);\n            \n            if(res.data.length > 0){// if this email has been registered\n                setAccountCreationError(\"This email has been registered.\");\n\n            }else{\n                is_valid_email_token(token, email);\n            }\n\n        } catch (err) {\n            setAccountCreationError(\"Invalid email.\");\n\n        }\n    };\n\n    // to validate token and company email address\n    async function is_valid_email_token(token, token_email) {\n\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/token/?token=${token}`,config);\n            // if token does not exist or the email provided does not match the token provided\n            if(res.data[0].email === token_email){\n                has_username_registered(username);\n                \n            }else{\n                setAccountCreationError(\"Invalid email or token.\");\n            }\n\n        } catch (err) {\n            setAccountCreationError(\"Invalid email or token.\");\n        }\n    };\n\n    // to check whether an username has been registered\n    async function has_username_registered(created_username) {\n\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/account/?username=${created_username}`,config);\n            // if this username has been registered\n            if(res.data.length > 0){\n                setAccountCreationError(\"This username has been registered.\");\n            }else{\n                passwordsMatch(password, re_password)\n            }\n\n        } catch (err) {\n            setAccountCreationError(\"Invalid username\");\n        }\n    };\n\n    // check if the passwords match\n    const passwordsMatch = (pwd1, pwd2) =>{\n        if (password !== re_password ) {\n            setAccountCreationError(\"Passwords do not match.\");\n        }else{\n            signup(username, email, password);;\n            setAccountCreationError(\"\");\n\n        }\n\n    }\n\n\n    const onChange = e => setRegisterFormData({ ...registerFormData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        has_email_registered(email);  \n    };\n    \n    \n    if (isAuthenticated) {\n        return <Redirect to='/' />\n    }\n\n    // if(message != null){\n    //     document.getElementById(\"enterbutton2\").disabled = true;\n    // }\n    const success_msg =\"Password reset link has been sent to your email.\";\n    return (\n        <div>\n            <nav>\n                <label className=\"logo\"><span>!</span>H05T4G3S</label>\n            </nav>\n            <section>\n                <div className=\"container\">\n                    <div className=\"user signinBx\">\n                        <div className=\"imgBx\"><img src={registerLogo} alt=\"\" /></div>\n                        <div className=\"formBx\">\n                            <form action=\"\" onSubmit={e => onSubmit(e)}>\n                                <p style={{color: '#677eff'}}>{message}</p>\n                                <p style={{color: '#A52A2A'}}>{accountCreationError}</p>\n                                <h2>Create an account</h2>\n                                <input type=\"text\" id=\"tkn\" name=\"token\" placeholder=\"Pre-assigned Token\" onChange={e => onChange(e)} required/>\n                                <input type=\"email\" name=\"email\" value={email} placeholder=\"Company Email Address\"onChange={e => onChange(e)} required/>\n                                <input type=\"text\" name=\"username\" value={username} placeholder=\"Create username\" onChange={e => onChange(e)} required/>\n                                <input type=\"password\" id=\"pw\" name=\"password\" value ={password}placeholder=\"Create Password\" pattern=\"(?=.*\\d).{10,20}\" title=\"Must contain at least one letter, one number and 10-20 characters\" onChange={e => onChange(e)} required/>\n                                <input type=\"password\" id=\"cpw\" name=\"re_password\" value ={re_password} placeholder=\"Confirm Password\" onChange={e => onChange(e)} required/>\n                                <input type=\"submit\" id=\"enterbutton2\" name=\"submit\" value=\"Register\" disabled={message==success_msg}/>\n                                \n                                <p className=\"signup\">\n                                    Already have an account ?\n                                    <a href=\"/login\" >Sign in.</a>\n                                </p>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    message: state.auth.message\n});\n\nexport default connect(mapStateToProps, { signup })(Signup);\n","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/containers/Login.js",["75","76","77"],"import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login, reset_password } from '../actions/authenticate';\nimport './css/login.css'\nimport loginLogo from './picture/eye.jpg';\nimport forgetPwdLogo from './picture/microchip.jpg';\n\nconst Login = ({ login, error, message, isAuthenticated, reset_password  }) => {\n    //login state\n    const [loginFormData, setloginFormData] = useState({\n        email: '',\n        password: '' \n    });\n    // const [loginError, setLoginError] = useState(error === \"login_fail\"?\"Invalid email or password.\":\"\");\n\n    // forget your password states\n    // const [forgetPwdError, setForgetPwdError] = useState(error ===\"password_reset_fail\"?\"This email does not exist.\":\"\");\n    // const [forgetPwdMsg, setForgetPwdMsg]= useState(message ===\"password_reset_success\"?\"Password reset link has been sent to your email.\":\"\");\n    const [forgetPwdFormData, setForgetPwdFormData] = useState({\n        forgetPwdEmail: ''\n    });\n\n\n    // login page functions\n    const { email, password } = loginFormData;\n\n    const onLoginChange = e => setloginFormData({ ...loginFormData, [e.target.name]: e.target.value });\n\n    const onLoginSubmit = e => {\n        e.preventDefault();\n        login(email, password);\n    };\n\n \n    if (isAuthenticated) {\n        return <Redirect to='/' />\n    }\n\n\n    // forget your password page function\n    // const { forgetPwdEmail } = forgetPwdFormData;\n\n    // const onForgetPwdChange = e => setForgetPwdFormData({ ...forgetPwdFormData, [e.target.name]: e.target.value });\n\n    // const onForgetPwdSubmit = e => {\n    //     e.preventDefault();\n    //     reset_password(forgetPwdEmail);\n    // };\n\n\n    // toggle forms\n    // const toggleForm = e => {\n    //     const container = document.querySelector('.container');\n    //     container.classList.toggle('active');\n    // };\n\n    return (\n        <div>\n            <nav>\n                <label className=\"logo\"><span>!</span>H05T4G3S</label>\n            </nav>\n            <section>\n            <div className=\"container\">\n                <div className=\"user signinBx\">\n                <div className=\"imgBx\"><img src={loginLogo} alt=\"\" /></div>\n                <div className=\"formBx\">\n                    <form action=\"\" onSubmit={e => onLoginSubmit(e)}>\n                    <p style={{color: '#A52A2A'}}>{error}</p>\n                    <h2>Sign In</h2>\n                    <input type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={e => onLoginChange(e)} required/>\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={e => onLoginChange(e)}required/>\n                    <input type=\"submit\" id=\"enterbutton1\" value=\"Login\" />\n                    <p className=\"signup\">\n                        Don't have an account ?\n                        <a href=\"/signup\">Register.</a>\n                    </p>\n                    <p className=\"signup\">\n                        Forgot your password ?\n                        <a href='/ResetPassword' >Reset Password.</a>\n                    </p>\n                    </form>\n                </div>\n                </div>\n            </div>\n            </section>\n\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.auth.error,\n    message: state.auth.message\n});\n\nexport default connect(mapStateToProps, { login ,reset_password })(Login);\n","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/containers/ResetPassword.js",["78"],"import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password } from '../actions/authenticate';\nimport logo from './picture/microchip.jpg';\n\nconst ResetPassword = ({ reset_password, message, error }) => {\n    //const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        email: ''\n    });\n\n    const { email } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        reset_password(email);\n        // setRequestSent(true);\n    };\n\n    // if (requestSent) {\n    //     return <Redirect to='/' />\n    // }\n\n    return (\n        <div>\n        <nav>\n            <label className=\"logo\"><span>!</span>H05T4G3S</label>\n        </nav>\n        <section>\n            <div className=\"container\">\n                <div className=\"user signinBx\">\n                    <div className=\"imgBx\"><img src={logo} alt=\"\" /></div>\n                    <div className=\"formBx\">\n                        <form action=\"\" onSubmit={e => onSubmit(e)}>\n                            <p style={{color: '#677eff'}}>{message}</p> \n                            <p style={{color: '#A52A2A'}}>{error}</p>\n                            <h2>Password Reset Request</h2>\n                            <input type=\"email\" name=\"email\" value={email} placeholder=\"Company Email Address\" onChange={e => onChange(e)} required/>\n                            <input type=\"submit\" id=\"enterbutton2\"  value=\"Reset\" />\n                            <p className=\"signup\">\n                                Already have an account ?\n                                <a href=\"/login\" >Sign in.</a>\n                            </p>\n                            <p className=\"signup\">\n                                Don't have an account ?\n                                <a href=\"/signup\">Register.</a>\n                            </p>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n       </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    error: state.auth.error,\n    message: state.auth.message\n});\nexport default connect(mapStateToProps , { reset_password })(ResetPassword);\n","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/containers/ResetPasswordConfirm.js",[],"/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/hocs/Layout.js",["79"],"import React, { useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated, load_user } from '../actions/authenticate';\n\nconst Layout = ({ checkAuthenticated, load_user, children }) => {\n    useEffect(() => {\n        checkAuthenticated();\n        load_user();\n    }, []);\n\n    return (\n        <div>\n            <Navbar />\n            {children}\n        </div>\n    );\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\n","/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/actions/authenticate.js",[],"/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/components/Navbar.js",["80","81"],"/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/reducers/index.js",[],"/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/actions/types.js",[],"/Applications/MAMP/htdocs/GitHub/ubsfyp2021/djreact/src/frontend/src/reducers/auth.js",["82"],"import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    error: null, \n    message: null,\n    user: null\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true,\n                error: null,\n                message: null\n            }\n        case AUTHENTICATED_FAIL:\n            return {\n                ...state,\n                isAuthenticated: false, \n                error: null,\n                message: null\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            localStorage.setItem('refresh', payload.refresh);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh, \n                error: null,\n                message: null\n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false,\n                error: null,\n                message: \"Please check your email for the activation link.\"\n            }\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload\n            }\n        \n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n\n        case LOGIN_FAIL:\n            return {\n                ...state,\n                error: \"Wrong email or password!\",\n                message: null\n            }\n        case SIGNUP_FAIL:\n            return {\n                message: null,\n                error: null\n            }\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null,\n                error: null\n            }\n        case PASSWORD_RESET_SUCCESS:\n            return {\n                ...state,\n                message: \"Password reset link has been sent to your email.\",\n                error: null\n            }\n        \n        case PASSWORD_RESET_FAIL:\n            return {\n                ...state,\n                message: null,\n                error: \"User with given email does not exist.\"\n            }\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n            return{\n                ...state,\n                message: \"Password reset success.\",\n                error: null\n            }\n        case PASSWORD_RESET_CONFIRM_FAIL:\n            return {\n                ...state,\n                message: null,\n                error: \"Password Reset failed.\"\n            }\n        case ACTIVATION_SUCCESS:\n        case ACTIVATION_FAIL:\n            return {\n                ...state\n            }\n        default:\n            return state\n    }\n};\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":40,"nodeType":"89","messageId":"90","endLine":1,"endColumn":47},{"ruleId":"87","severity":1,"message":"91","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":131,"column":120,"nodeType":"94","messageId":"95","endLine":131,"endColumn":122},{"ruleId":"87","severity":1,"message":"96","line":7,"column":8,"nodeType":"89","messageId":"90","endLine":7,"endColumn":21},{"ruleId":"87","severity":1,"message":"97","line":20,"column":12,"nodeType":"89","messageId":"90","endLine":20,"endColumn":29},{"ruleId":"87","severity":1,"message":"98","line":20,"column":31,"nodeType":"89","messageId":"90","endLine":20,"endColumn":51},{"ruleId":"87","severity":1,"message":"99","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":10,"column":8,"nodeType":"102","endLine":10,"endColumn":10,"suggestions":"103"},{"ruleId":"87","severity":1,"message":"104","line":7,"column":12,"nodeType":"89","messageId":"90","endLine":7,"endColumn":20},{"ruleId":"87","severity":1,"message":"105","line":7,"column":22,"nodeType":"89","messageId":"90","endLine":7,"endColumn":33},{"ruleId":"106","severity":1,"message":"107","line":28,"column":1,"nodeType":"108","endLine":131,"endColumn":2},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'forgetPwdLogo' is defined but never used.","'forgetPwdFormData' is assigned a value but never used.","'setForgetPwdFormData' is assigned a value but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkAuthenticated' and 'load_user'. Either include them or remove the dependency array. If 'checkAuthenticated' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["111"],"'redirect' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [checkAuthenticated, load_user]",{"range":"114","text":"115"},[344,346],"[checkAuthenticated, load_user]"]